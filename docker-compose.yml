version: '3.3'
services:
  api:
    env_file: .env
    image: translite/buddy:${TAG}
    # build:
    #   context: ./
    restart: "unless-stopped"
    volumes:
      - "./:/usr/local/etc/goliatho"
    # ports:
    #   - "3008:3008"
    #   - "${MEDIASOUP_MIN_PORT}-${MEDIASOUP_MAX_PORT}:${MEDIASOUP_MIN_PORT}-${MEDIASOUP_MAX_PORT}/udp"
    #   - "${MEDIASOUP_MIN_PORT}-${MEDIASOUP_MAX_PORT}:${MEDIASOUP_MIN_PORT}-${MEDIASOUP_MAX_PORT}/tcp"
    network_mode: "host"
    stdin_open: true
    tty: true
    depends_on:
      - "webserver"
      - "redis"
    logging:
      driver: "json-file"
      options:
        max-size: "100MB"
        max-file: "3"
    # environment:
      # NODE_ENV: 'production'
      # DOCKER: 'true'
      # DATABASE_URL: "${DATABASE_URL}"
  # db:
  #   image: "postgres:${POSTGRES_VERSION}"
  #   restart: "always"
  #   volumes:
  #     - "./db-postgresql-data:/var/lib/postgresql/data"
  #   environment:
  #     POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  #     POSTGRES_USER: "${POSTGRES_USER}"
  #     POSTGRES_DB: "${POSTGRES_DB}"
  #   # ports:
  #   #   - "5432:5432"
  #   # networks:
  #   #   - "budyclub"
  #   network_mode: "host"
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "100MB"
  #       max-file: '3'
  redis:
    image: "redis"
    network_mode: "host"
    entrypoint: "redis-server /usr/local/etc/redis/redis.conf"
    restart: "unless-stopped"
    volumes:
      - "./redis:/usr/local/etc/redis"
  #Nginx Service
  webserver:
    image: "nginx:alpine"
    container_name: "budyclubApi"
    restart: "unless-stopped"
    stdin_open: true
    tty: true
    volumes:
      - "./nginx/conf/:/etc/nginx/conf.d/:ro"
      - "./certbot/www:/var/www/certbot/:ro"
      # - "./certbot/conf/:/etc/nginx/ssl/:ro"
    network_mode: "host"
  # certbot:
  #   image: "certbot/certbot:latest"
  #   restart: "unless-stopped"
  #   volumes:
  #     - "./certbot/www/:/var/www/certbot/:rw"
  #     - "./certbot/conf/:/etc/letsencrypt/:rw"
networks:
  budyclub:
    driver: "host"


# reference
# https://mindsers.blog/post/https-using-nginx-certbot-docker/